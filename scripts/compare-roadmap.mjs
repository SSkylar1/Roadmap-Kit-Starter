import { execSync, spawnSync } from "node:child_process";
import fs from "node:fs";
import path from "node:path";
import yaml from "yaml";

const sh = (cmd, opts={}) => execSync(cmd, { stdio: "pipe", encoding: "utf8", ...opts }).trim();
const env = (k, d="") => (process.env[k] ?? d);
const GITHUB_REPO = env("GITHUB_REPOSITORY","");
const BASE_SHA = env("BASE_SHA"); const MERGE_SHA = env("MERGE_SHA");
if (!BASE_SHA || !MERGE_SHA) { console.error("BASE_SHA and MERGE_SHA required"); process.exit(1); }

const runChecksHere = (label="curr") => {
  const res = spawnSync("node scripts/roadmap-check.mjs", { shell:true, encoding:"utf8" });
  if (res.status !== 0) { console.error(res.stdout,res.stderr); throw new Error("roadmap-check failed"); }
  return JSON.parse(fs.readFileSync("docs/roadmap-status.json","utf8"));
};

const toMap = (arr=[]) => {
  const m = new Map();
  for (const wk of arr) for (const it of (wk.items||[])) m.set(it.id, { done: it.done, name: it.name, week: wk.title });
  return m;
};
const diffFlips = (before, after) => {
  const A = toMap(before), B = toMap(after);
  const up=[], down=[];
  for (const [id,a] of A.entries()) { const b=B.get(id); if(!b)continue; if(!a.done && b.done) up.push({id,name:b.name,week:b.week}); if(a.done && !b.done) down.push({id,name:b.name,week:b.week}); }
  return { up, down };
};

const repoRoot = sh("git rev-parse --show-toplevel");
const work = path.join(repoRoot, ".worktrees", "base");
sh(`git fetch --no-tags --prune --depth=0`);
sh(`git worktree add "${work}" ${BASE_SHA}`);

process.chdir(work);
const before = runChecksHere("before");

process.chdir(repoRoot);
sh(`git checkout ${MERGE_SHA}`);
const after = runChecksHere("after");

const { up, down } = diffFlips(before.weeks, after.weeks);
const upMd = up.length ? up.map(x=>`- ✅ **${x.name}** \`${x.id}\` — *${x.week}*`).join("\n") : "_No items advanced to ✅ on this merge._";
const downMd = down.length ? down.map(x=>`- ❌ **${x.name}** \`${x.id}\` — *${x.week}*`).join("\n") : "_No regressions detected._";

const md = [
  `### Roadmap updates on merge`,
  ``,
  `**Advanced to ✅**`,
  upMd,
  ``,
  `**Regressions (✅ → ❌)**`,
  downMd,
  ``,
  `<sub>Generated by roadmap-kit (compare ${BASE_SHA.slice(0,7)} → ${MERGE_SHA.slice(0,7)}).</sub>`
].join("\n");

try { sh(`git worktree remove -f "${work}"`); } catch {}
console.log(md);
