{
  "version": 1,
  "generated_at": "2025-10-13T06:23:19.275Z",
  "redaction_rules": {
    "allow": [
      "docs/**",
      "src/**",
      "app/**",
      "packages/**",
      "**/*.md",
      "**/*.mdx",
      "**/*.json",
      "**/*.yml",
      "**/*.yaml",
      "**/*.ts",
      "**/*.tsx",
      "**/*.js",
      "**/*.jsx"
    ],
    "deny": [
      "**/.env*",
      "**/.env/**",
      "**/node_modules/**",
      "**/.next/**",
      "**/dist/**",
      "**/build/**",
      "**/*.key",
      "**/*.pem",
      "**/*.p12",
      "**/.DS_Store",
      "supabase/.branches/**",
      ".git/**",
      ".github/**",
      ".env",
      ".env.*",
      "*.key",
      "*.pem",
      "dist/",
      "build/",
      ".out/",
      ".next/",
      "coverage/",
      "node_modules/",
      ".worktrees/"
    ]
  },
  "files": [
    {
      "path": "README.md",
      "bytes": 1222,
      "sha256": "1c7e99d5663523b8f33ca1a98c6e389fcb1ed4d44889c4260279dd37ddef7992",
      "preview": "# Roadmap Kit Starter\n\n[![Roadmap status](docs/roadmap-status.svg)](docs/roadmap-status.md)\n\nThis repository captures an end-to-end example of the Roadmap Kit in action. It\nincludes CI workflows, Supabase read-only probes, context packs, and automation\nscripts that keep roadmap status up to date.\n\n## What lives here?\n\n- **Automation scripts** under `scripts/` keep the roadmap, context pack, and DB\n  facts in sync.\n- **Docs** in `docs/` explain the GitHub App integration, assistant guardrails,\n  and generated status artifacts.\n- **Supabase edge function** (`supabase/functions/read_only_checks/`) provides a\n  read-only verification endpoint for automated checks.\n\n## Quick start\n\n```bash\nnpm install\nnpm run roadmap:check\n```\n\nThe `roadmap:check` script refreshes:\n\n- `docs/roadmap-status.json` and `docs/roadmap-status.md` (human-friendly view)\n- `docs/roadmap-status.svg` (the badge embedded above)\n\nAdditional helper commands live in `package.json` (for example\n`npm run context:pack` and `npm run db:facts`).\n\n## Useful references\n\n- [Roadmap overview](docs/roadmap.yml)\n- [Current status details](docs/roadmap-status.md)\n- [Context pack preview](docs/context/context-pack.json)\n- [DB facts](docs/db-facts.json)\n"
    },
    {
      "path": "deno.json",
      "bytes": 230,
      "sha256": "23d56affcdb58f8745428447335298df0946817a2a006ad78f0d0604a9bcb832",
      "preview": "{\n  \"functions\": {\n    \"read_only_checks\": {\n      \"verify_jwt\": false\n    }\n  },\n  \"nodeModulesDir\": \"auto\",\n  \"fmt\": { \"lineWidth\": 100, \"indentWidth\": 2, \"useTabs\": false },\n  \"lint\": { \"rules\": { \"tags\": [\"recommended\"] } }\n}\n"
    },
    {
      "path": "package.json",
      "bytes": 946,
      "sha256": "2decee8dd6fe7d9e4a776cc6f34ab6a43bc8c04e74ded9187693cbe98753dbe4",
      "preview": "{\n  \"name\": \"roadmap-kit\",\n  \"version\": \"0.1.0\",\n  \"type\": \"module\",\n  \"bin\": {\n    \"roadmap-kit\": \"./bin/cli.mjs\"\n  },\n  \"scripts\": {\n    \"init\": \"node ./bin/init.mjs --yes\",\n    \"verify\": \"node ./bin/verify.mjs\",\n    \"doctor\": \"node ./bin/doctor.mjs\",\n    \"schema:roadmap\": \"node ./scripts/validate-roadmap.mjs\",\n    \"schema:tech\": \"node ./scripts/validate-techstack.mjs\",\n    \"stack:scan\": \"node ./scripts/stack-scan.mjs\",\n    \"roadmap:check\": \"node ./scripts/roadmap-check.mjs\",\n    \"roadmap:discover\": \"node ./scripts/discover-work.mjs\",\n    \"pr:comment\": \"node ./scripts/compare-roadmap.mjs\",\n    \"context:pack\": \"node scripts/generate-context-pack.mjs\",\n    \"db:facts\": \"node scripts/generate-db-facts.mjs\"\n  },\n  \"dependencies\": {\n    \"chalk\": \"^5.3.0\",\n    \"fs-extra\": \"^11.2.0\",\n    \"yaml\": \"^2.5.0\"\n  },\n  \"devDependencies\": {\n    \"ajv\": \"^8.17.1\",\n    \"ajv-formats\": \"^3.0.1\",\n    \"fast-glob\": \"^3.3.3\",\n    \"js-yaml\": \"^4.1.0\"\n  }\n}\n"
    },
    {
      "path": "docs/assistant-hints.md",
      "bytes": 789,
      "sha256": "cae8138bfd089d109531697ef689cf2f0c5b9e7dbed406d6653fd970424eacc3",
      "preview": "# Assistant Hints (First-Message Guidance)\n\nAlways:\n1) Read `docs/roadmap-status.json` to understand what’s done vs pending.\n2) Use `docs/context/context-pack.json` (redacted previews of key files).\n3) Use `docs/db-facts.json` for schema, RLS, and policy existence (no data).\n4) Respect `.chatignore` and `docs/redaction-rules.yml` — never request secrets.\n5) When DB existence is uncertain, call the dashboard `/api/verify` endpoint\n   with a **read_only_checks** query like:\n   - `ext:pgcrypto`\n   - `table:public:users`\n   - `rls:public:users`\n   - `policy:public:users:select:Users can view own record`\n\nPrefer proposing **diffs/PR-ready edits** against files listed in the context pack.\nIf repo settings are needed, open a PR to `.roadmaprc.json` rather than inline instructions.\n"
    },
    {
      "path": "docs/audit.md",
      "bytes": 677,
      "sha256": "5013f51ff88b4c22d91afaa0c9c19e0b62f65a3a8e4170adf4f5f3db7b482090",
      "preview": "# Audit Notes\n\nScope\n- Only **read-only** artifacts are provided to assistants:\n  - `docs/context/context-pack.json` (redacted file previews + hashes)\n  - `docs/db-facts.json` (schema, RLS, policy facts)\n  - `docs/roadmap-status.json` (status only)\n\nProtections\n- Secrets are excluded by `.chatignore` and `docs/redaction-rules.yml`.\n- Context pack truncates large files and stores SHA-256 for change traceability.\n- Database verification uses a **read-only boolean** edge function; no data is returned.\n\nTraceability\n- CI commits include timestamps and job logs for when context was refreshed.\n- Dashboard PRs modify `.roadmaprc.json` and are reviewable like any code change.\n"
    },
    {
      "path": "docs/backlog-discovered.yml",
      "bytes": 50,
      "sha256": "0a1d073618014232cd78317fa3d40ab2002d67f081d1ed5ecd0d9ed8ac43a309",
      "preview": "discovered_at: 2025-09-13T21:34:02.249Z\nitems: []\n"
    },
    {
      "path": "docs/db-facts.json",
      "bytes": 103,
      "sha256": "ef0ab8f4cd61216478c0fa97a31b6c8f04044dc87a133655c862baca708538b0",
      "preview": "{\n  \"generated_at\": \"2025-10-07T06:29:38.026Z\",\n  \"tables\": [],\n  \"rls_enabled\": [],\n  \"policies\": []\n}"
    },
    {
      "path": "docs/db-facts.md",
      "bytes": 100,
      "sha256": "793fa844ab34977c92170751fc7566bf982b19f2cda2cb51b0171806fad95472",
      "preview": "# DB Facts\n\nGenerated: 2025-10-07T06:29:38.026Z\n\n## Tables (0)\n\n## RLS Enabled (0)\n\n## Policies (0)\n"
    },
    {
      "path": "docs/github-app.md",
      "bytes": 980,
      "sha256": "bd32b37466d03dd3600382b43b2062cbed29102d15392c8e37c99cf0f7f56c34",
      "preview": "# GitHub App (Production Auth)\n\n## Purpose\nUse a GitHub App for least-privilege, auditable automation (PRs, file reads/writes). Personal Access Tokens are allowed **only for local development**.\n\n## App configuration\n- **Permissions**\n  - Repository → **Contents: Read & write**\n  - Repository → **Pull requests: Read & write**\n- **Subscribe to events (optional)**\n  - `pull_request`, `push` (for webhooks, if used)\n- **Installation**\n  - Installed on: `SSkylar1/Roadmap-Kit-Starter` (and any additional target repos)\n\n## Deployment\n- Dashboard env vars (Vercel):\n  - `GH_APP_ID`: `<your app id>`\n  - `GH_APP_PRIVATE_KEY`: PEM as a single line with `\\n`\n  - `GH_APP_INSTALLATION_ID`: *(optional, can auto-resolve per repo)*\n- Local dev fallback:\n  - `GITHUB_TOKEN` with `repo` scope (do **not** set in production)\n\n## Notes\n- PATs are disabled in production deploys; GitHub App is the only auth path.\n- The dashboard opens PRs and reads/writes repo files only through the App."
    },
    {
      "path": "docs/infra-facts.md",
      "bytes": 201,
      "sha256": "ab7c624b5aabacc0458bf90a36aaaed8f598b11f5b93c8daf6205a37d6d663e1",
      "preview": "# Infra Facts (project-agnostic)\n- Primary DB: Postgres (Supabase)\n- Read-only allowlist URL: see `.roadmaprc.json`\n- Environments: dev, prod\n\n## Health probes\n- App health: https://example.com/health\n"
    },
    {
      "path": "docs/one-pager.md",
      "bytes": 1921,
      "sha256": "ce6612326f4a0230f9f655029de77c33c285729c6f4766fe0a6cb9f5bbf429b5",
      "preview": "# Adopt Roadmap Kit in <30 Minutes\n\nUse this quick-start checklist to port the Roadmap Kit workflows and docs into a\nnew repository.\n\n## 1. Prep (5 minutes)\n\n- Ensure you have Node.js 18+, npm, and the Supabase CLI installed locally.\n- Copy this repository or use it as a GitHub template.\n- Create a Supabase project (free tier is fine) and deploy the\n  `read_only_checks` function.\n\n## 2. Configure secrets & settings (5 minutes)\n\n- Generate a service role key for the Supabase project and store the hosted edge\n  function URL.\n- In the new repo, set the `READ_ONLY_CHECKS_URL` secret to that URL.\n- Review `.roadmaprc.json` and update `verify.defaultEnv` plus any\n  environment-specific overrides.\n\n## 3. Install automation workflows (10 minutes)\n\n- Copy the workflows from `.github/workflows/`:\n  - `roadmap.yml` (status generator)\n  - `context-pack.yml` (context bundle)\n  - `db-facts.yml` (database facts)\n- Copy the helper scripts in `scripts/` if you started from a clean repo.\n- Commit the workflows and scripts so CI can run immediately after the first\n  push.\n\n## 4. Seed initial artifacts (5 minutes)\n\nRun the bootstrap commands locally:\n\n```bash\nnpm install\nnpm run context:pack\nnpm run db:facts\nnpm run roadmap:check\n```\n\nCommit the generated artifacts:\n\n- `docs/context/context-pack.json`\n- `docs/db-facts.json`\n- `docs/roadmap-status.json`, `docs/roadmap-status.md`, and `docs/roadmap-status.svg`\n\n## 5. Confirm dashboard integration (5 minutes)\n\n- Install the Roadmap Kit GitHub App (\n/* …truncated (415 bytes) … */\n"
    },
    {
      "path": "docs/redaction-rules.yml",
      "bytes": 653,
      "sha256": "b26123d8d19b774ec0ac065f97b3fe13f7dcdcf3e2667d1d15f703a1fff90570",
      "preview": "# Redaction rules for the Context Pack generator.\n# \"deny\" always wins. Keep this tight.\n\ndeny:\n  - \"**/.env*\"\n  - \"**/.env/**\"\n  - \"**/node_modules/**\"\n  - \"**/.next/**\"\n  - \"**/dist/**\"\n  - \"**/build/**\"\n  - \"**/*.key\"\n  - \"**/*.pem\"\n  - \"**/*.p12\"\n  - \"**/.DS_Store\"\n  - \"supabase/.branches/**\"\n  - \".git/**\"\n  - \".github/**\"  # context doesn’t need workflow code itself\n\n# Allowed paths to index (text files only; large files truncated in previews)\nallow:\n  - \"docs/**\"\n  - \"src/**\"\n  - \"app/**\"\n  - \"packages/**\"\n  - \"**/*.md\"\n  - \"**/*.mdx\"\n  - \"**/*.json\"\n  - \"**/*.yml\"\n  - \"**/*.yaml\"\n  - \"**/*.ts\"\n  - \"**/*.tsx\"\n  - \"**/*.js\"\n  - \"**/*.jsx\""
    },
    {
      "path": "docs/roadmap-status.md",
      "bytes": 2182,
      "sha256": "40bbc0692308053580b20122bfe80716f03bc14e3d0a29cd236269fc91864345",
      "preview": "# Roadmap Status\n\nGenerated: 2025-09-24T21:49:13.620Z (env: dev)\n\n## Weeks 1–2 — Foundations\n- ✅ **CI & status scaffolding** (`infra-ci`)\n- ✅ **Secrets & safety guardrails in place** (`safety-basics`)\n\n## Weeks 3–4 — Read-only probes & GitHub App\n- ✅ **Supabase read_only_checks deployed** (`supa-probe`)\n- ✅ **GitHub App connected (PAT fallback allowed)** (`gh-app-installed`)\n\n## Weeks 5–6 — VS Code: assistant-safe context\n- ✅ **VS Code assistant configured (Continue/Cursor)** (`ide-config`)\n- ✅ **.chatignore covers secrets and noise** (`chatignore-coverage`)\n\n## Weeks 7–8 — Context Packs (auto)\n- ✅ **Context pack generated (code + docs index)** (`ctx-pack`)\n- ✅ **Context pack auto-refresh via CI** (`ctx-cron`)\n\n## Weeks 9–10 — PR automations\n- ✅ **PR merge comments summarize ✅/❌ flips** (`pr-flips`)\n- ✅ **Repo README shows live status badge** (`status-badge`)\n\n## Weeks 11–12 — DB facts surfaced (read-only)\n- ✅ **Auto-generated DB facts (tables, policies only)** (`db-facts`)\n- ✅ **DB facts refresh in CI** (`db-facts-ci`)\n\n## Weeks 13–14 — Tech stack truth & discovery\n- ✅ **tech-stack.yml curated and validated** (`tech-stack`)\n- ✅ **Off-roadmap discovery populates backlog** (`discover-work`)\n\n## Weeks 15–16 — Privacy & redaction\n- ✅ **Redaction rules defined (files/regex)** (`redaction-rules`)\n- ✅ **Redaction applied to context pack** (`redaction-enforced`)\n\n## Weeks 17–18 — Dashboard onboarding (multi-repo)\n- ✅ **Dashboard deployed (Vercel or similar)** (`dash-deployed`)\n- ✅ *\n/* …truncated (582 bytes) … */\n"
    },
    {
      "path": "docs/roadmap.yml",
      "bytes": 5696,
      "sha256": "5eed1f710df6e8617a0187c4bd8ea3430fabb89a64704c5890875f2c84706634",
      "preview": "# docs/roadmap.yml\nversion: 1\nweeks:\n  - id: w01\n    title: \"Weeks 1–2 — Foundations\"\n    items:\n      - id: infra-ci\n        name: \"CI & status scaffolding\"\n        checks:\n          - type: files_exist\n            globs:\n              - \".github/workflows/roadmap.yml\"\n              - \"scripts/roadmap-check.mjs\"\n      - id: safety-basics\n        name: \"Secrets & safety guardrails in place\"\n        checks:\n          - type: files_exist\n            globs:\n              - \".roadmaprc.json\"\n  - id: w02\n    title: \"Weeks 3–4 — Read-only probes & GitHub App\"\n    items:\n      - id: supa-probe\n        name: \"Supabase read_only_checks deployed\"\n        checks:\n          - type: files_exist\n            globs:\n              - \"supabase/functions/read_only_checks/index.ts\"\n              - \"supabase/functions/read_only_checks/deno.json\"\n      - id: gh-app-installed\n        name: \"GitHub App connected (PAT fallback allowed)\"\n        checks:\n          - type: files_exist\n            globs:\n              - \"docs/github-app.md\"\n  - id: w03\n    title: \"Weeks 5–6 — VS Code: assistant-safe context\"\n    items:\n      - id: ide-config\n        name: \"VS Code assistant configured (Continue/Cursor)\"\n        checks:\n          - type: files_exist\n            globs:\n              - \"docs/context/preprompt.md\"\n      - id: chatignore-coverage\n        name: \".chatignore covers secrets and noise\"\n        checks:\n          - type: files_exist\n            globs:\n              - \".chatignore\"\n  - id: w04\n    t\n/* …truncated (4144 bytes) … */\n"
    },
    {
      "path": "docs/roadmaprc.schema.json",
      "bytes": 1147,
      "sha256": "65b86dd42e4f173093ee60cb1dd704ea5801ec5d7438e51633a68389541ef74a",
      "preview": "{\n  \"$id\": \"https://example.com/roadmaprc.schema.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"roadmaprc\",\n  \"type\": \"object\",\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"kitVersion\": { \"type\": \"string\" },\n    \"envs\": {\n      \"type\": \"object\",\n      \"description\": \"Environment-specific config.\",\n      \"additionalProperties\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"READ_ONLY_CHECKS_URL\": { \"type\": \"string\" }\n        }\n      }\n    },\n    \"verify\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"symbols\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n        \"defaultEnv\": { \"type\": \"string\" }\n      }\n    },\n    \"comment\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"liveProbe\": { \"type\": \"boolean\" },\n        \"probeTestPass\": { \"type\": \"boolean\" },\n        \"probeSupaFn\": { \"type\": \"boolean\" },\n        \"privacyDisclaimer\": { \"type\": \"string\" },\n        \"legendEnabled\": { \"type\": \"boolean\" }\n      }\n    }\n  },\n  \"required\": [\"envs\"]\n}\n"
    },
    {
      "path": "docs/tech-stack.yml",
      "bytes": 311,
      "sha256": "6ebb3ea99a593ea84b159165f49bd9cc1d1d19daec051d1eecc8162f9383d032",
      "preview": "app:\n  framework: node\n  deps:\n    - chalk\n    - fs-extra\n    - yaml\n  devDeps:\n    - ajv\n    - ajv-formats\n    - fast-glob\n    - js-yaml\nci_cd:\n  workflows:\n    - context-pack.yml\n    - db-facts.yml\n    - nightly-verify.yml\n    - roadmap-pr-comment.yml\n    - roadmap.yml\ngenerated_at: 2025-09-13T21:34:01.136Z\n"
    },
    {
      "path": "docs/template-usage.md",
      "bytes": 672,
      "sha256": "f5bfc3e57e17284f77fb0997aab998b3dc17161ae5604bfc8687abc915db9ab7",
      "preview": "# Template Usage (New Repo in <15 min)\n\n1) **Use this repo as a template** or copy `.github/`, `docs/`, `scripts/`, `supabase/functions/read_only_checks`.\n2) **Set repo secrets**:\n   - `READ_ONLY_CHECKS_URL`: Supabase edge function URL returning booleans.\n3) **Edit `.roadmaprc.json`** for your env and probe URL.\n4) **Install workflows**:\n   - `roadmap.yml` (status)\n   - `context-pack.yml` (context)\n   - `db-facts.yml` (db facts)\n5) **Run once locally**:\n   ```bash\n   npm i\n   npm run context:pack\n   npm run db:facts\n   npm run roadmap:check\n   git add docs/context docs/db-facts.* docs/roadmap-status.json\n   git commit -m \"chore: seed context & status\"\n   git push\n"
    },
    {
      "path": "schema/roadmap.schema.json",
      "bytes": 2333,
      "sha256": "d727869d1b671934bc44d6cabfbf34ce985db5384438b549d342c59cf07ba740",
      "preview": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Roadmap\",\n  \"type\": \"object\",\n  \"required\": [\"version\", \"weeks\"],\n  \"properties\": {\n    \"version\": { \"type\": [\"string\", \"number\"] },\n    \"weeks\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"required\": [\"id\", \"title\", \"items\"],\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"title\": { \"type\": \"string\" },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"required\": [\"id\", \"name\"],\n              \"properties\": {\n                \"id\": { \"type\": \"string\" },\n                \"name\": { \"type\": \"string\" },\n                \"checks\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"oneOf\": [\n                      { \"properties\": { \"type\": { \"const\": \"files_exist\" }, \"globs\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [\"type\",\"globs\"], \"additionalProperties\": false },\n                      { \"properties\": { \"type\": { \"const\": \"code_search\" }, \"patterns\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [\"type\",\"patterns\"], \"additionalProperties\": false },\n                      { \"properties\": { \"type\": { \"const\": \"test_pass\" }, \"command\": { \"type\": \"string\" }, \"must_match\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [\"type\",\"command\"], \"additionalProperties\"\n/* …truncated (833 bytes) … */\n"
    },
    {
      "path": "schema/roadmaprc.schema.json",
      "bytes": 1042,
      "sha256": "6433094faf7b64100b8f1cdcb350ab43378a81e48a63b663451a857c60abab6d",
      "preview": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Roadmap Kit Runtime Config\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"kitVersion\": { \"type\": [\"string\", \"null\"] },\n    \"envs\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"READ_ONLY_CHECKS_URL\": { \"type\": \"string\" }\n        },\n        \"additionalProperties\": true\n      }\n    },\n    \"verify\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"symbols\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n        \"defaultEnv\": { \"type\": \"string\" }\n      },\n      \"additionalProperties\": false\n    },\n    \"comment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"liveProbe\": { \"type\": \"boolean\" },\n        \"probeTestPass\": { \"type\": \"boolean\" },\n        \"probeSupaFn\": { \"type\": \"boolean\" },\n        \"privacyDisclaimer\": { \"type\": \"string\" },\n        \"legendEnabled\": { \"type\": \"boolean\" }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false\n}\n"
    },
    {
      "path": "schema/tech-stack.schema.json",
      "bytes": 790,
      "sha256": "df5998c3f0c369add7545a8a776b8326cea278e55560791523576f384fbb9cbc",
      "preview": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Tech Stack\",\n  \"type\": \"object\",\n  \"required\": [\"app\", \"ci_cd\", \"generated_at\"],\n  \"properties\": {\n    \"app\": {\n      \"type\": \"object\",\n      \"required\": [\"framework\"],\n      \"properties\": {\n        \"framework\": { \"type\": \"string\" },\n        \"deps\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n        \"devDeps\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n      },\n      \"additionalProperties\": true\n    },\n    \"ci_cd\": {\n      \"type\": \"object\",\n      \"required\": [\"workflows\"],\n      \"properties\": {\n        \"workflows\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n      },\n      \"additionalProperties\": true\n    },\n    \"generated_at\": { \"type\": \"string\" }\n  },\n  \"additionalProperties\": false\n}\n"
    },
    {
      "path": "docs/context/preprompt.md",
      "bytes": 506,
      "sha256": "0fe1a9b883b948c26dbe6533ec9189770a7627d0cbe11118628b697be95d48c4",
      "preview": "# Preprompt (Context Attachment)\n\nUse these references as ground truth for this repository:\n- Roadmap status: `docs/roadmap-status.json`\n- Context pack (redacted code/docs previews): `docs/context/context-pack.json`\n- DB facts (tables, RLS, policies): `docs/db-facts.json`\n- Tech stack: `docs/tech-stack.yml`\n\nRules:\n- Never reveal or invent secrets.\n- Suggest changes as PR-ready diffs.\n- When verifying DB existence, rely on the read-only probe (`/api/verify`) or `docs/db-facts.json`, not live queries.\n"
    },
    {
      "path": "supabase/functions/read_only_checks/deno.json",
      "bytes": 262,
      "sha256": "82cfa973600bc16f6319b09c5fe60d8368b5c80754db3464ce228cd7eb5bd8f0",
      "preview": "{\n  \"functions\": {\n    \"read_only_checks\": {\n      \"verify_jwt\": false\n    }\n  },\n\n  \"nodeModulesDir\": \"auto\",\n\n  \"fmt\": {\n    \"lineWidth\": 100,\n    \"indentWidth\": 2,\n    \"useTabs\": false\n  },\n  \"lint\": {\n    \"rules\": {\n      \"tags\": [\"recommended\"]\n    }\n  }\n}\n"
    },
    {
      "path": "supabase/functions/read_only_checks/index.ts",
      "bytes": 3903,
      "sha256": "671d0b7a60a9012ae4eb04841b70142f5687d57f138d2e77128f39be7eb68685",
      "preview": "// supabase/functions/read_only_checks/index.ts\n\n// Deno runtime\nimport { serve } from \"https://deno.land/std@0.224.0/http/server.ts\";\nimport { createClient } from \"npm:@supabase/supabase-js@2\";\n\n// CORS + JSON headers\nconst headers = {\n  \"content-type\": \"application/json\",\n  \"access-control-allow-origin\": \"*\",\n  \"access-control-allow-headers\": \"content-type, authorization\",\n  \"access-control-allow-methods\": \"GET, POST, OPTIONS\",\n};\n\n// helper to parse query strings like \"ext:pgcrypto\"\nfunction parseSymbol(q: string) {\n  const trimmed = q.trim();\n  if (!trimmed) return null;\n  const parts = trimmed.split(\":\");\n  const kind = parts.shift()?.toLowerCase();\n  if (!kind) return null;\n  if (kind === \"ext\"    && parts.length === 1) return { kind: \"ext\", ext: parts[0] };\n  if (kind === \"table\"  && parts.length === 2) return { kind: \"table\", sch: parts[0], tbl: parts[1] };\n  if (kind === \"rls\"    && parts.length === 2) return { kind: \"rls\", sch: parts[0], tbl: parts[1] };\n  if (kind === \"policy\" && parts.length === 3) return { kind: \"policy\", sch: parts[0], tbl: parts[1], pol: parts[2] };\n  return null;\n}\n\nfunction getErrorMessage(error: unknown): string {\n  if (error instanceof Error) return error.message;\n  if (typeof error === \"object\" && error !== null && \"message\" in error) {\n    const { message } = error as { message?: unknown };\n    if (typeof message === \"string\") return message;\n  }\n  return String(error);\n}\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    retur\n/* …truncated (2401 bytes) … */\n"
    }
  ]
}